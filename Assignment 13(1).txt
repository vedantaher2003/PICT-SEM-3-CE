#include<iostream>
using namespace std;

class DEQueue{
    int*arr;
    int size;
    int front;
    int rear;
    public:
    DEQueue(int n=100){
        arr = new int [n];
        front = -1;
        rear = -1;
        size = n;
    }
    bool full(){
        if((front == 0 && rear == size-1) || (front == rear+1)){
            return true;
        }
        return false;
        
    }
    bool empty(){
        if(front == -1){
            return true;
        }
        return false;
    }
    void insertfront(int x){
        if(full()){
            cout<<"Queue is full\n";
            return;
        }
        if(front ==-1){
            front = 0;
            rear = 0;
        }else if(front == 0){
            front = size -1;
            
        }else{
            front--;
        }
        arr[front] = x;

    }
    void insertrear(int x){
        if(full()){
            cout<<"Queue is full\n";
            return;
        }
        if(front ==-1){
            front = 0;
            rear = 0;
        }else if(rear == size-1){
            rear = 0;
            
        }else{
            rear++;
        }
        arr[rear] = x;
    }
    int deletefront(){
        if(empty()){
            cout<<"Queue is empty .\n";
            return -1;
        }
        int a = arr[front];
        if(front == rear){
            front = rear = -1;
        }else if(front == size-1){
            front =0;
        }else{
            front++;
        }
        return a;
    }

    int deleterear(){
        if(empty()){
            cout<<"Queue is empty .\n";
            return -1;
        }
        int a = arr[rear];
        if(front == rear){
            front = rear = -1;
        }else if(rear == 0){
            rear == size-1;
        }else{
            rear--;
        }
        return a;
    }
    void display(){
        int f= front;
        if(empty()){
            cout<<"Queue is empty\n";
            return ;
        }else if(front<=rear){
            for(int i= f ;i<=rear;i++){
                cout<<arr[i]<<" ";
            }cout<<endl;

            return;
        }else if(front>rear){
            while(front != size){
                cout<<arr[f]<<" ";
            }
            f= 0;
            for(int i= f ;i<=rear;i++){
                cout<<arr[i]<<" ";
            }cout<<endl;

            return;
        }
    }
};
int main(){

    DEQueue qu(3);

    qu.insertfront(1);
    qu.insertrear(2);
    qu.insertrear(3);
    qu.display();
    qu.deletefront();
    qu.display();
    qu.deleterear();
    qu.display();
    //qu.insertrear(4);
}